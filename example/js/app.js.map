{"version":3,"sources":["webpack:///webpack/bootstrap 2950889186edb9bcbc53","webpack:///./example/index.js","webpack:///./lib/vdom/element.js","webpack:///./lib/vdom/util.js","webpack:///./lib/vdom/diff.js","webpack:///./lib/vdom/patch.js","webpack:///./lib/vdom/list-diff.js","webpack:///./example/tag/test1.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,aAAY;AACZ,gBAAe,QAAQ;AACvB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;AC9BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA,YAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA,yB;;;;;;ACtEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAqC,SAAS;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,yCAAwC,SAAS;AACjD;AACA;;AAEA;AACA,E;;;;;;AChCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,0BAAyB,qCAAqC;AAC9D;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,yCAAyC;AAClE;AACA;AACA;AACA;AACA,IAAG;AACH,wBAAuB,qCAAqC;AAC5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sB;;;;;;ACnGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,2BAA0B;AAC1B,8DAA6D;AAC7D;AACA;AACA;AACA,MAAK,4BAA4B;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA,uB;;;;;;ACzGA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,aAAY,OAAO,IAAI;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA,qCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACjJA;AACA,wBAAuB;AACvB,eAAc,uBAAuB;AACrC,kBAAiB,4BAA4B,EAAE;AAC/C,qBAAoB;AACpB,6BAA4B;AAC5B,wBAAuB;AACvB,wBAAuB;AACvB;AACA,UAAS;AACT;AACA;AACA;AACA","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2950889186edb9bcbc53\n **/","var el = require('../lib/vdom/element');\nvar diff = require('../lib/vdom/diff');\nvar patch = require('../lib/vdom/patch');\nvar test1 = require('./tag/test1');\nwindow.el = el;\n\nwindow.test = function test() {\n  // console.log('click');\n  data.list = data.list.reverse();\n  var x = new Date().getTime();\n  var newTree = test1(data);\n  var patches = diff(tree, newTree);\n  patch(root, patches)\n  tree = newTree;\n  document.getElementById('time').innerHTML = '- Reversing took ' + (new Date().getTime() - x) + ' ms';\n  // setTimeout(test, 10);\n}\n\n\nvar data = {list: []};\nfor (var i = 0; i < 10; i++) {\n  data.list.push(i);\n}\n\nvar tree = test1(data);\n\nvar root = tree.render()\n\nwindow.onload = function() {\n  document.body.appendChild(root);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./example/index.js\n ** module id = 1\n ** module chunks = 0\n **/","var _ = require('./util')\r\n\r\n// if (typeof window == 'undefined') {\r\n//   var jsdom = require(\"jsdom\").jsdom;\r\n//   var window = jsdom.defaultView;\r\n//   document = jsdom('');\r\n// }\r\n/**\r\n * Virtual-dom Element.\r\n * @param {String} tagName\r\n * @param {Object} props - Element's properties,\r\n *                       - using object to store key-value pair\r\n * @param {Array<Element|String>} - This element's children elements.\r\n *                                - Can be Element instance or just a piece plain text.\r\n */\r\nfunction Element (tagName, props, children) {\r\n  if (!(this instanceof Element)) {\r\n    return new Element(tagName, props, children)\r\n  }\r\n\r\n  if (_.isArray(props)) {\r\n    children = props\r\n    props = {}\r\n  }\r\n\r\n  this.tagName = tagName\r\n  this.props = props || {}\r\n  this.children = children || []\r\n  this.key = props\r\n    ? props.key\r\n    : void 666\r\n\r\n  var count = 0\r\n\r\n  _.each(this.children, function (child, i) {\r\n    if (child instanceof Element) {\r\n      count += child.count\r\n    } else {\r\n      children[i] = '' + child\r\n    }\r\n    count++\r\n  })\r\n\r\n  this.count = count\r\n}\r\n\r\n/**\r\n * Render the hold element tree.\r\n */\r\nElement.prototype.render = function () {\r\n  var el = document.createElement(this.tagName)\r\n  var props = this.props\r\n\r\n  for (var propName in props) {\r\n    var propValue = props[propName]\r\n    el.setAttribute(propName, propValue)\r\n  }\r\n\r\n  var children = this.children || []\r\n\r\n  _.each(children, function (child) {\r\n    var childEl = (child instanceof Element)\r\n      ? child.render()\r\n      : document.createTextNode(child)\r\n    el.appendChild(childEl)\r\n  })\r\n\r\n  return el\r\n}\r\n\r\nmodule.exports = Element\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/vdom/element.js\n ** module id = 2\n ** module chunks = 0\n **/","var _ = exports\n\n_.type = function (obj) {\n  return Object.prototype.toString.call(obj).replace(/\\[object\\s|\\]/g, '')\n}\n\n_.isArray = function isArray (list) {\n  return _.type(list) === 'Array'\n}\n\n_.isString = function isString (list) {\n  return _.type(list) === 'String'\n}\n\n_.each = function each (array, fn) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    fn(array[i], i)\n  }\n}\n\n_.toArray = function toArray (listLike) {\n  if (!listLike) {\n    return []\n  }\n\n  var list = []\n\n  for (var i = 0, len = listLike.length; i < len; i++) {\n    list.push(listLike[i])\n  }\n\n  return list\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/vdom/util.js\n ** module id = 3\n ** module chunks = 0\n **/","var _ = require('./util')\nvar patch = require('./patch')\nvar listDiff = require('./list-diff').diff\n\nfunction diff (oldTree, newTree) {\n  var index = 0\n  var patches = {}\n  dfsWalk(oldTree, newTree, index, patches)\n  return patches\n}\n\nfunction dfsWalk (oldNode, newNode, index, patches) {\n  var currentPatch = []\n\n  // node is removed\n  if (newNode === null) {\n    // will be removed when perform reordering, so has no needs to do anthings in here\n  // textNode content replacing\n  } else if (_.isString(oldNode) && _.isString(newNode)) {\n    if (newNode !== oldNode) {\n      currentPatch.push({ type: patch.TEXT, content: newNode })\n    }\n  // nodes are the same, diff its props and children\n  } else if (\n      oldNode.tagName === newNode.tagName &&\n      oldNode.key === newNode.key\n    ) {\n    // diff props\n    var propsPatches = diffProps(oldNode, newNode)\n    if (propsPatches) {\n      currentPatch.push({ type: patch.PROPS, props: propsPatches })\n    }\n    // diff children\n    diffChildren(oldNode.children, newNode.children, index, patches, currentPatch)\n  // nodes are not the same, replace the old node with new node\n  } else {\n    currentPatch.push({ type: patch.REPLACE, node: newNode })\n  }\n\n  if (currentPatch.length) {\n    patches[index] = currentPatch\n  }\n}\n\nfunction diffChildren (oldChildren, newChildren, index, patches, currentPatch) {\n  var diffs = listDiff(oldChildren, newChildren, 'key')\n  newChildren = diffs.children\n\n  if (diffs.moves.length) {\n    var reorderPatch = { type: patch.REORDER, moves: diffs.moves }\n    currentPatch.push(reorderPatch)\n  }\n\n  var leftNode = null\n  var currentNodeIndex = index\n  _.each(oldChildren, function (child, i) {\n    var newChild = newChildren[i]\n    currentNodeIndex = (leftNode && leftNode.count)\n      ? currentNodeIndex + leftNode.count + 1\n      : currentNodeIndex + 1\n    dfsWalk(child, newChild, currentNodeIndex, patches)\n    leftNode = child\n  })\n}\n\nfunction diffProps (oldNode, newNode) {\n  var count = 0\n  var oldProps = oldNode.props\n  var newProps = newNode.props\n\n  var key, value\n  var propsPatches = {}\n\n  // find out different properties\n  for (key in oldProps) {\n    value = oldProps[key]\n    if (newProps[key] !== value) {\n      count++\n      propsPatches[key] = newProps[key]\n    }\n  }\n\n  // find out new property\n  for (key in newProps) {\n    value = newProps[key]\n    if (!oldProps.hasOwnProperty(key)) {\n      count++\n      propsPatches[key] = newProps[key]\n    }\n  }\n\n  // if properties all are identical\n  if (count === 0) {\n    return null\n  }\n\n  return propsPatches\n}\n\nmodule.exports = diff\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/vdom/diff.js\n ** module id = 4\n ** module chunks = 0\n **/","var _ = require('./util')\n\nvar REPLACE = 0\nvar REORDER = 1\nvar PROPS = 2\nvar TEXT = 3\n\nfunction patch (node, patches) {\n  var walker = {index: 0}\n  dfsWalk(node, walker, patches)\n}\n\nfunction dfsWalk (node, walker, patches) {\n  var currentPatches = patches[walker.index]\n\n  var len = node.childNodes\n    ? node.childNodes.length\n    : 0\n  for (var i = 0; i < len; i++) {\n    var child = node.childNodes[i]\n    walker.index++\n    dfsWalk(child, walker, patches)\n  }\n\n  if (currentPatches) {\n    applyPatches(node, currentPatches)\n  }\n}\n\nfunction applyPatches (node, currentPatches) {\n  _.each(currentPatches, function (currentPatch) {\n    switch (currentPatch.type) {\n      case REPLACE:\n        node.parentNode.replaceChild(currentPatch.node.render(), node)\n        break\n      case REORDER:\n        reorderChildren(node, currentPatch.moves)\n        break\n      case PROPS:\n        setProps(node, currentPatch.props)\n        break\n      case TEXT:\n        if (node.textContent) {\n          node.textContent = currentPatch.content\n        } else {\n          // fuck ie\n          node.nodeValue = currentPatch.content\n        }\n        break\n      default:\n        throw new Error('Unknown patch type ' + currentPatch.type)\n    }\n  })\n}\n\nfunction setProps (node, props) {\n  for (var key in props) {\n    if (props[key] === void 666) {\n      node.removeAttribute(key)\n    } else {\n      // for setting IE' style attr as string is not working!\n      if (key === 'style') {\n        node.style.cssText = props[key]\n      } else {\n        node.setAttribute(key, props[key])\n      }\n    }\n  }\n}\n\nfunction reorderChildren (node, moves) {\n  var staticNodeList = _.toArray(node.childNodes)\n  var maps = {}\n\n  _.each(staticNodeList, function (node) {\n    if (node.nodeType === 1) {\n      var key = node.getAttribute('key')\n      if (key) {\n        maps[key] = node\n      }\n    }\n  })\n\n  _.each(moves, function (move) {\n    var index = move.index\n    if (move.type === 0) { // remove item\n      if (staticNodeList[index] === node.childNodes[index]) { // maybe have been removed for inserting\n        node.removeChild(node.childNodes[index])\n      }\n      staticNodeList.splice(index, 1)\n    } else if (move.type === 1) { // insert item\n      var insertNode = maps[move.item.key]\n        ? maps[move.item.key] // reuse old item\n        : move.item.render()\n      staticNodeList.splice(index, 0, insertNode)\n      node.insertBefore(insertNode, node.childNodes[index] || null)\n    }\n  })\n}\n\npatch.REPLACE = REPLACE\npatch.REORDER = REORDER\npatch.PROPS = PROPS\npatch.TEXT = TEXT\n\nmodule.exports = patch\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/vdom/patch.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Diff two list in O(N).\n * @param {Array} oldList - Original List\n * @param {Array} newList - List After certain insertions, removes, or moves\n * @return {Object} - {moves: <Array>}\n *                  - moves is a list of actions that telling how to remove and insert\n */\nfunction diff (oldList, newList, key) {\n  var oldMap = makeKeyIndexAndFree(oldList, key)\n  var newMap = makeKeyIndexAndFree(newList, key)\n\n  var newFree = newMap.free\n\n  var oldKeyIndex = oldMap.keyIndex\n  var newKeyIndex = newMap.keyIndex\n\n  var moves = []\n\n  // a simulate list to manipulate\n  var children = []\n  var i = 0\n  var item\n  var itemKey\n  var freeIndex = 0\n\n  // fist pass to check item in old list: if it's removed or not\n  while (i < oldList.length) {\n    item = oldList[i]\n    itemKey = getItemKey(item, key)\n    if (itemKey) {\n      if (!newKeyIndex.hasOwnProperty(itemKey)) {\n        children.push(null)\n      } else {\n        var newItemIndex = newKeyIndex[itemKey]\n        children.push(newList[newItemIndex])\n      }\n    } else {\n      var freeItem = newFree[freeIndex++]\n      children.push(freeItem || null)\n    }\n    i++\n  }\n\n  var simulateList = children.slice(0)\n\n  // remove items no longer exist\n  i = 0\n  while (i < simulateList.length) {\n    if (simulateList[i] === null) {\n      remove(i)\n      removeSimulate(i)\n    } else {\n      i++\n    }\n  }\n\n  // i is cursor pointing to a item in new list\n  // j is cursor pointing to a item in simulateList\n  var j = i = 0\n  while (i < newList.length) {\n    item = newList[i]\n    itemKey = getItemKey(item, key)\n\n    var simulateItem = simulateList[j]\n    var simulateItemKey = getItemKey(simulateItem, key)\n\n    if (simulateItem) {\n      if (itemKey === simulateItemKey) {\n        j++\n      } else {\n        // new item, just inesrt it\n        if (!oldKeyIndex.hasOwnProperty(itemKey)) {\n          insert(i, item)\n        } else {\n          // if remove current simulateItem make item in right place\n          // then just remove it\n          var nextItemKey = getItemKey(simulateList[j + 1], key)\n          if (nextItemKey === itemKey) {\n            remove(i)\n            removeSimulate(j)\n            j++ // after removing, current j is right, just jump to next one\n          } else {\n            // else insert item\n            insert(i, item)\n          }\n        }\n      }\n    } else {\n      insert(i, item)\n    }\n\n    i++\n  }\n\n  function remove (index) {\n    var move = {index: index, type: 0}\n    moves.push(move)\n  }\n\n  function insert (index, item) {\n    var move = {index: index, item: item, type: 1}\n    moves.push(move)\n  }\n\n  function removeSimulate (index) {\n    simulateList.splice(index, 1)\n  }\n\n  return {\n    moves: moves,\n    children: children\n  }\n}\n\n/**\n * Convert list to key-item keyIndex object.\n * @param {Array} list\n * @param {String|Function} key\n */\nfunction makeKeyIndexAndFree (list, key) {\n  var keyIndex = {}\n  var free = []\n  for (var i = 0, len = list.length; i < len; i++) {\n    var item = list[i]\n    var itemKey = getItemKey(item, key)\n    if (itemKey) {\n      keyIndex[itemKey] = i\n    } else {\n      free.push(item)\n    }\n  }\n  return {\n    keyIndex: keyIndex,\n    free: free\n  }\n}\n\nfunction getItemKey (item, key) {\n  if (!item || !key) return void 666\n  return typeof key === 'string'\n    ? item[key]\n    : key(item)\n}\n\nexports.makeKeyIndexAndFree = makeKeyIndexAndFree // exports for test\nexports.diff = diff\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/vdom/list-diff.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = function(data) {\n  return el('test1', {}, [\n    el('h1', {\"id\":\"h1\",\"class\":\"h1\"}, ['Hello World']),\n    el('table', {\"style\":\"text-align: center;\"}, [\n      el('tbody', {}, data.list.map(function(item) {\n          return el('tr', {}, [\n            el('td', {}, ['111']),\n            el('td', {}, ['222'])\n          ]);\n        })\n      )\n    ])\n  ]);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./example/tag/test1.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}